package iceCube.uhe.interactions;

import java.io.*;
import java.util.*;

import iceCube.uhe.particles.*;
import iceCube.uhe.points.*;
import numRecipes.*;

/** The Neutrino nucleon interactions to produce micro black holes
    and its evapolation. Evapolation of generated black holes 
    results in hadronic showers, muons, and taus.
    
    Calculation of the cross section is based on the table provided
    from Jonathan Feng and Francis Halzen. 

    The class variables  Particle, and Point are necessary for the methods
    described here because the cross section depends on the particle propaty
    and the medium like Z and A(atomic number).

*/
public class NeutrinoBHevaporation extends Interactions {

    /** cross section [pB] table provided in the BH evaporation model
     */
    protected static double[][] sigma_table =
    {
	{
	    9.303E+01,2.168E+02,4.263E+02,7.446E+02,1.193E+03,1.791E+03,
	    2.557E+03,3.510E+03,4.670E+03,6.057E+03,7.695E+03,9.607E+03,
	    1.182E+04,1.438E+04,1.730E+04,2.063E+04,2.441E+04,2.870E+04,
	    3.353E+04,3.896E+04,4.506E+04,5.188E+04,5.950E+04,6.800E+04,
	    7.745E+04,8.794E+04,9.955E+04,1.124E+05,1.266E+05,1.423E+05,
	    1.595E+05,1.784E+05,1.991E+05,2.219E+05,2.468E+05,2.741E+05,
	    3.038E+05,3.362E+05,3.715E+05,4.099E+05,4.516E+05,4.969E+05,
	    5.461E+05,5.993E+05,6.570E+05,7.193E+05,7.866E+05,8.594E+05,
	    9.380E+05,1.022E+06,1.114E+06,1.211E+06,1.317E+06,1.430E+06,
	    1.552E+06,1.683E+06,1.823E+06,1.973E+06,2.134E+06,2.306E+06,
	    2.490E+06,2.687E+06,2.897E+06,3.122E+06,3.363E+06,3.619E+06,
	    3.892E+06,4.183E+06,4.493E+06,4.824E+06,5.175E+06,5.550E+06,
	    5.949E+06,6.370E+06,6.816E+06,7.296E+06,7.805E+06,8.344E+06,
	    8.914E+06,9.518E+06,1.016E+07,1.084E+07,1.156E+07,1.233E+07,
	    1.314E+07,1.400E+07,1.491E+07,1.588E+07,1.691E+07,1.800E+07,
	    1.916E+07,2.039E+07,2.169E+07,2.307E+07,2.454E+07,2.609E+07,
	    2.774E+07,2.948E+07,3.133E+07,3.330E+07,3.538E+07
	},

	{
	    0.000E+00,0.000E+00,0.000E+00,0.000E+00,0.000E+00,0.000E+00,
	    0.000E+00,0.000E+00,0.000E+00,0.000E+00,0.000E+00,0.000E+00,
	    1.079E-02,1.110E+00,1.111E+01,4.910E+01,1.434E+02,3.270E+02,
	    6.333E+02,1.094E+03,1.737E+03,2.590E+03,3.679E+03,5.028E+03,
	    6.665E+03,8.618E+03,1.092E+04,1.360E+04,1.671E+04,2.027E+04,
	    2.436E+04,2.900E+04,3.427E+04,4.023E+04,4.695E+04,5.449E+04,
	    6.295E+04,7.240E+04,8.295E+04,9.470E+04,1.078E+05,1.222E+05,
	    1.382E+05,1.560E+05,1.755E+05,1.970E+05,2.207E+05,2.466E+05,
	    2.751E+05,3.063E+05,3.404E+05,3.776E+05,4.183E+05,4.625E+05,
	    5.107E+05,5.631E+05,6.199E+05,6.816E+05,7.486E+05,8.209E+05,
	    8.993E+05,9.838E+05,1.075E+06,1.174E+06,1.280E+06,1.395E+06,
	    1.518E+06,1.651E+06,1.793E+06,1.946E+06,2.110E+06,2.287E+06,
	    2.476E+06,2.678E+06,2.894E+06,3.126E+06,3.374E+06,3.639E+06,
	    3.922E+06,4.224E+06,4.546E+06,4.889E+06,5.256E+06,5.646E+06,
	    6.061E+06,6.504E+06,6.974E+06,7.475E+06,8.007E+06,8.570E+06,
	    9.169E+06,9.808E+06,1.049E+07,1.120E+07,1.196E+07,1.277E+07,
	    1.362E+07,1.452E+07,1.548E+07,1.650E+07,1.758E+07
	},

	{
	    0.000E+00,0.000E+00,0.000E+00,0.000E+00,0.000E+00,0.000E+00,
	    5.196E-04,1.080E-01,1.324E+00,6.450E+00,1.999E+01,4.744E+01,
	    9.457E+01,1.670E+02,2.699E+02,4.082E+02,5.867E+02,8.099E+02,
	    1.083E+03,1.411E+03,1.800E+03,2.256E+03,2.786E+03,3.399E+03,
	    4.103E+03,4.909E+03,5.827E+03,6.870E+03,8.051E+03,9.383E+03,
	    1.088E+04,1.257E+04,1.446E+04,1.657E+04,1.893E+04,2.155E+04,
	    2.447E+04,2.771E+04,3.129E+04,3.526E+04,3.964E+04,4.447E+04,
	    4.978E+04,5.562E+04,6.203E+04,6.905E+04,7.675E+04,8.516E+04,
	    9.434E+04,1.044E+05,1.153E+05,1.272E+05,1.401E+05,1.541E+05,
	    1.694E+05,1.859E+05,2.038E+05,2.232E+05,2.442E+05,2.668E+05,
	    2.912E+05,3.176E+05,3.460E+05,3.767E+05,4.096E+05,4.451E+05,
	    4.832E+05,5.242E+05,5.682E+05,6.153E+05,6.659E+05,7.201E+05,
	    7.782E+05,8.403E+05,9.069E+05,9.779E+05,1.054E+06,1.135E+06,
	    1.222E+06,1.314E+06,1.413E+06,1.518E+06,1.630E+06,1.749E+06,
	    1.875E+06,2.011E+06,2.156E+06,2.309E+06,2.471E+06,2.644E+06,
	    2.827E+06,3.022E+06,3.229E+06,3.449E+06,3.683E+06,3.932E+06,
	    4.196E+06,4.477E+06,4.776E+06,5.094E+06,5.432E+06
	},

	{
	    0.000E+00,0.000E+00,0.000E+00,0.000E+00,0.000E+00,0.000E+00,
	    0.000E+00,0.000E+00,0.000E+00,0.000E+00,0.000E+00,0.000E+00,
	    0.000E+00,0.000E+00,0.000E+00,0.000E+00,0.000E+00,0.000E+00,
	    0.000E+00,0.000E+00,0.000E+00,0.000E+00,1.649E-03,2.087E-01,
	    2.241E+00,1.028E+01,3.079E+01,7.146E+01,1.403E+02,2.449E+02,
	    3.925E+02,5.897E+02,8.430E+02,1.159E+03,1.544E+03,2.005E+03,
	    2.551E+03,3.190E+03,3.933E+03,4.790E+03,5.773E+03,6.898E+03,
	    8.177E+03,9.629E+03,1.127E+04,1.312E+04,1.521E+04,1.754E+04,
	    2.016E+04,2.308E+04,2.634E+04,2.997E+04,3.400E+04,3.847E+04,
	    4.341E+04,4.887E+04,5.489E+04,6.154E+04,6.882E+04,7.685E+04,
	    8.564E+04,9.527E+04,1.058E+05,1.173E+05,1.299E+05,1.436E+05,
	    1.585E+05,1.747E+05,1.924E+05,2.115E+05,2.323E+05,2.548E+05,
	    2.791E+05,3.054E+05,3.340E+05,3.647E+05,3.979E+05,4.337E+05,
	    4.722E+05,5.137E+05,5.583E+05,6.064E+05,6.580E+05,7.133E+05,
	    7.728E+05,8.365E+05,9.047E+05,9.779E+05,1.056E+06,1.140E+06,
	    1.230E+06,1.325E+06,1.427E+06,1.537E+06,1.653E+06,1.777E+06,
	    1.910E+06,2.051E+06,2.202E+06,2.361E+06,2.531E+06
	}
    };

    /** Energy[GeV] for the sigma_table */
    protected double[] energy_table = 
    {
	1.000E+06,1.148E+06,1.318E+06,1.514E+06,1.738E+06,1.995E+06,
	2.291E+06,2.630E+06,3.020E+06,3.467E+06,3.981E+06,4.571E+06,
	5.248E+06,6.026E+06,6.918E+06,7.943E+06,9.120E+06,1.047E+07,
	1.202E+07,1.380E+07,1.585E+07,1.820E+07,2.089E+07,2.399E+07,
	2.754E+07,3.162E+07,3.631E+07,4.169E+07,4.786E+07,5.495E+07,
	6.310E+07,7.244E+07,8.318E+07,9.550E+07,1.096E+08,1.259E+08,
	1.445E+08,1.660E+08,1.905E+08,2.188E+08,2.512E+08,2.884E+08,
	3.311E+08,3.802E+08,4.365E+08,5.012E+08,5.754E+08,6.607E+08,
	7.586E+08,8.710E+08,1.000E+09,1.148E+09,1.318E+09,1.514E+09,
	1.738E+09,1.995E+09,2.291E+09,2.630E+09,3.020E+09,3.467E+09,
	3.981E+09,4.571E+09,5.248E+09,6.026E+09,6.918E+09,7.943E+09,
	9.120E+09,1.047E+10,1.202E+10,1.380E+10,1.585E+10,1.820E+10,
	2.089E+10,2.399E+10,2.754E+10,3.162E+10,3.631E+10,4.169E+10,
	4.786E+10,5.495E+10,6.310E+10,7.244E+10,8.318E+10,9.550E+10,
	1.096E+11,1.259E+11,1.445E+11,1.660E+11,1.905E+11,2.188E+11,
	2.512E+11,2.884E+11,3.311E+11,3.802E+11,4.365E+11,5.012E+11,
	5.754E+11,6.607E+11,7.586E+11,8.710E+11,1.000E+12
    };

    /** mutiplicity table in the BH model for model 1*/
    protected double[] multiplicity_table_model1 = 
    {
	    2.19642649770658,2.20359248004545,2.21115214163662,2.21434120599670,
	    2.22150146371600,2.22769143576251,2.23446463887180,2.24116008487795,
	    2.24916690458008,2.25517382675466,2.26435238468530,2.26992173819724,
	    2.27664053616357,2.28480175588282,2.29310607867566,2.30052442181607,
	    2.30869910903501,2.31682504078505,2.32552870639799,2.33400075895794,
	    2.34269826865987,2.35169091932880,2.36077288400078,2.37001175591005,
	    2.37951910566901,2.38894495336117,2.39793407576487,2.40843055553801,
	    2.41763933223458,2.42842431704512,2.43859791823933,2.44908619948719,
	    2.45995047422829,2.47036102794518,2.48086213730724,2.49215991584814,
	    2.50245596363271,2.51402114563040,2.52609645795011,2.53672117613986,
	    2.54831270605374,2.55981450885101,2.57198310197130,2.58428667424915,
	    2.59639942993435,2.60786553807274,2.62119859721098,2.63375155509545,
	    2.64616266606981,2.65845786737802,2.67263860029605,2.68442843267318,
	    2.69802544345094,2.71104846120245,2.72521097939651,2.73842559469133,
	    2.75157922344829,2.76503001008786,2.77896825573273,2.79318697862070,
	    2.80787927187982,2.82107737487894,2.83600034656732,2.85024435578379,
	    2.86466567888059,2.87962339319486,2.89439764729721,2.90945914199595,
	    2.92397364552859,2.93942966397708,2.95363103767777,2.96986650863623,
	    2.98496566201057,3.00133184202737,3.01529698539611,3.03152894995873,
	    3.04703367933031,3.06386858473503,3.07946161609026,3.09677920024174,
	    3.11075092865536,3.12905360875444,3.14562212237559,3.16263003852005,
	    3.17884084345037,3.19409275347642,3.21206577747045,3.22920221796450,
	    3.24513158594207,3.26379357941037,3.28109408752450,3.29850954595829,
	    3.31667423944214,3.33346185124686,3.35153571346987,3.36950118177221,
	    3.38802690740481,3.40621545014664,3.42382543108011,3.44207237750067,
	    3.46164844353382,3.48042484378547,3.49926878785355,3.51774172138684,
	    3.53583313067275,3.55670843374851,3.57506632434207,3.59491535181997,
	    3.61419861916111,3.63379219877899,3.65318035311402,3.67511912591416,
	    3.69466907827308,3.71313705434544,3.73382830790353,3.75474973264408,
	    3.77480578947202,3.79531791953310,3.81724653194817,3.83680931666049,
	    3.85836033507832,3.87998994736996,3.90124370891537,3.92081816981169,
	    3.94430437344159,3.96389579886991,3.98732807220535,4.01018187235438,
	    4.03024665806060,4.05271508410009,4.07589339510741,4.09749349020481,
	    4.11981941291600,4.14127895283922,4.16478021385099,4.18851066216741,
	    4.21237027772999,4.23358492301910,4.25588306097283,4.28136102012013,
	    4.30605964593409,4.32859490487258,4.35244675950746,4.37682153165600,
	    4.39999874548929,4.42542523803309,4.44794704157662,4.47548359735549,
	    4.49853906799971,4.52440900820018,4.54862021725108,4.57623249190805,
	    4.60095536848478,4.62766995466995,4.65232610510266,4.67681499057348,
	    4.70347368412150,4.72867090397564,4.75523261288963,4.78296724529246,
	    4.80957929975569,4.83446466075918,4.86212326235562,4.88791328650311,
	    4.91739835081658,4.94526984278569,4.97153545547609,4.99920435693492,
	    5.02895587567833,5.05650368985782,5.08362381551783,5.11151968895967,
	    5.14108362271308,5.16841216821323,5.19887750556176,5.22896524189919,
	    5.25689310516129,5.28673551546291,5.31525910352058,5.34587509900800,
	    5.37523527715484,5.40589037095884,5.43584887987428,5.46822114954959,
	    5.49868671910057,5.53111957092970,5.56103941064280,5.59255786705203,
	    5.62318082357821,5.65483874805673,5.68824931300899,5.71856126614139,
	    5.75125305576911,5.78430434962841,5.81801513185646,5.85107276674394,
	    5.88493732948648,5.91678520608082,5.95086523715897,5.98540308295783,
	    6.02015644648687,6.05452762479066,6.09052105752616,6.12706051389542,
	    6.15736180920809,6.19577441995030,6.23258276754754,6.26672938913358,
	    6.30165276986882,6.33955414265020,6.37323746129182,6.41323917866904,
	    6.44902206963743,6.48814607633144,6.51829844015948,6.55898420116476,
	    6.59914351574935,6.63523796895446,6.67449941230636,6.71310587622535,
	    6.75419458320995,6.79095670466032,6.82965887096645,6.86926555175473,
	    6.91407868477341,6.95336815124412,6.99356829910620,7.03827748299642,
	    7.07602812084632,7.11611259768528,7.15774011416782,7.19955916104067,
	    7.24573435590733,7.28829694143588,7.33127397414745,7.37493245178226,
	    7.41564896769799,7.46396965640472,7.50760407243612,7.54865936109644,
	    7.60031526349296,7.64575587640152,7.69011373152876,7.73128887043690,
	    7.78215518254293,7.82975728534880,7.87883578238381,7.92622602934198,
	    7.96752000907803,8.01664996822864,8.06521293800414,8.11531270770011,
	    8.16261359626274,8.21249004479254,8.26132456419520,8.31229641629297,
	    8.36637925759051,8.41147633685025,8.46220888761191,8.51546886404995,
	    8.56357418220071,8.62030853873880,8.66631573636751,8.72593916960321,
	    8.78515028711354,8.83696511102133,8.88479119258661,8.94207192214921,
	    8.99755257797893,9.05753491057990,9.11213216376005,9.16587571171569,
	    9.22222623716230,9.28381856201351,9.33941983820181,9.39244388712455,
	    9.45558371613217,9.51788565122946,9.57471062756967,9.63975568518638,
	    9.69453892689080,9.75493882225009,9.81855721568229,9.88171535234510,
	    9.94627897892322,10.0073423520338,10.0754538648536,10.1434758249416,
	    10.1974947830297,10.2630577956051,10.3293551728154,10.3961957782417,
	    10.4596873230613,10.5310978616578,10.6028597799530,10.6544877560581,
	    10.7415546002884,10.8043496532299,10.8768378326265,10.9365621550096,
	    11.0171273500696,11.0932741016992,11.1551604480828,11.2305106381221,
	    11.3138962267977,11.3709346021087,11.4544064064146,11.5275723781481,
	    11.5981138098747,11.6841753360786,11.7523445852113,11.8361211636152,
	    11.9200502355176,11.9864280526933,12.0641064201562,12.1434100098994,
	    12.2369043401374,12.3057984666515,12.3882794780088,12.4765612706461,
	    12.5658226669201,12.6451318963796,12.7106987850698,12.8211021765352,
	    12.8886572430746,12.9927933273567,13.0575713262565,13.1670917256924,
	    13.2403398421723,13.3551084059525,13.4246140238800,13.5223611577451,
	    13.5920110365406,13.7181454840481,13.8032312261585,13.8974030025749,
	    13.9973076922280,14.0666661782101,14.1698400983911,14.2821309228656,
	    14.3733287842288,14.4894305134204,14.5425063756398,14.6654179635609,
	    14.7554713612659,14.8818091744865,14.9917825957476,15.0820545430092,
	    15.1397810335553,15.2911238316356,15.4143063082028,15.4993846070012,
	    15.5877749116557,15.7231035782291,15.7895675840322,15.9443546434091,
	    16.0553318340541,16.1557459940989,16.3022117488178,16.3870225901370,
	    16.5527634217289,16.6192199082367,16.7662415256796,16.8894544861487,
	    16.9480039958461,17.1360750001695,17.2247414837411,17.3481556798340,
	    17.4907886006674,17.6140546598686,17.7558827601967,17.8675812768720,
	    17.9939516199683,18.1374056413511,18.2372539761941,18.3873315968021,
	    18.5358137634380,18.6231356673476,18.7909149069847,18.9698832826754,
	    19.0337038788295,19.2249989002986,19.2923367659761,19.4486312306577,
	    19.5760571897383,19.7730494746137,19.9258148711380,20.0294871999049,
	    20.1989105474569,20.2498069009163,20.4721593924903,20.7040221317359,
	    20.7787990471713,21.0506494212686,21.0928069688419,21.2323686323252,
	    21.4661063929188,21.5519422197210,21.7822634719858,21.9233018563291,
	    22.1209394502208,22.2679275636453,22.3895149915594,22.6059005364787,
	    22.6494232505285,22.9738155408866,23.0651878872259,23.3253695517537,
	    23.3380288821498,23.5959112332560,23.8180106611765,24.0336469506902,
	    24.1651411586393,24.4049315261263,24.5262787517214,24.8286343479486,
	    24.9310415917536,25.1992198924109,25.2893850221246,25.4999030199852,
	    25.6592832600420,25.8862904729720,26.1590992010074,26.1722437050665,
	    26.4195791447860,26.7173195764450,27.0839063239261,27.1777280451071,
	    27.1126998328646,27.4592712030419,27.7743752854794,28.2178473262153,
	    28.1016918674704,28.5531588642847,28.7471812041542,28.8334675885372,
	    29.0487400720266,29.3459820767002,29.4782308584169,29.8653766059895,
	    30.0412296223203,30.1076662017105,30.3980906105247,30.8293057309614,
	    30.7163569563562,31.3030262567299,31.4821418651886,31.7757694285102,
	    32.0251608865733,32.4960970881102,32.6277366756612,32.9316676323997,
	    33.1905556421788,33.7621907821230,33.5100353140342,33.6888701044696,
	    34.1353350106915,35.0157998582074,34.8776291056175,34.8330167528571,
	    35.1394497146389,35.3717060389273,35.8995718326187,35.9881190804295,
	    36.1720720230492,36.7397994695831,37.0883240824629,36.9330895915618,
	    37.7602200462017,37.4991924370882,38.7410831005864,38.7975222043915,
	    39.4199131948502,38.9551705969373,39.1754207340639,39.7435609100585,
	    39.5955495242704,40.6826514608785,41.1895383449295,41.3025577179773,
	    40.8473413061006,42.0799388247718,43.0159201418764,43.1676076922150,
	    42.5548149719284,43.3093024177417,43.9149091693889,43.7716334792025,
	    44.0797765423069,45.0645507706235,45.9628091370706,47.2343418923812,
	    45.6048572837011,45.6474784759769,46.6620876221570,48.5396433892678,
	    47.5560175874058,47.1419124989391
    };


    /** log10(Energy[GeV]) for multiplicity table model 1 */
    protected double[] logE_multiplicity1_table = null;

    /** mutiplicity table in the BH model for model 2*/
    protected double[] multiplicity_table_model2 = 
    {
	    7.71873512199010,7.73892990566435,7.75812923133899,7.77947196151214,
	    7.80285088496086,7.82422097283090,7.84834220104157,7.87285377758589,
	    7.89753400783628,7.92020744380703,7.94522015179357,7.97067548369562,
	    7.99627942320757,8.02399825125574,8.05008968517953,8.07746740450213,
	    8.10465824029837,8.13512548206241,8.16353661172636,8.19317091985734,
	    8.22380479611988,8.25375770570839,8.28584836075303,8.31530783328161,
	    8.34935526420789,8.38093412575560,8.41557944184198,8.44920331989679,
	    8.48339203693913,8.51884139145137,8.55346857049635,8.59070985528194,
	    8.62513025241902,8.66387777891647,8.70206662390972,8.74000114511420,
	    8.77864155557955,8.81620900071720,8.85450891552056,8.89346374282688,
	    8.93624249501300,8.97559428617861,9.01669454075990,9.05834291611762,
	    9.10094824427096,9.14291363531733,9.18453284184867,9.22812250054960,
	    9.27113614000678,9.31619175736823,9.36251813716759,9.40532842608376,
	    9.45252130863631,9.49753967437989,9.54325652242999,9.58789150428419,
	    9.63664020448121,9.68189474486242,9.73021686419219,9.77902314143853,
	    9.82807678358659,9.87614624791752,9.92317639398512,9.97283822997126,
	    10.0272398328716,10.0751648837344,10.1254866001193,10.1772169827221,
	    10.2266836838310,10.2803286698699,10.3291871368819,10.3853874204509,
	    10.4390385620266,10.4902714810562,10.5436722436519,10.5976849490138,
	    10.6525251921911,10.7085656202502,10.7630785423042,10.8166929118816,
	    10.8766988807839,10.9288699939052,10.9865447847002,11.0448407802324,
	    11.0981394908838,11.1546184493796,11.2152434479670,11.2721624652187,
	    11.3314765675215,11.3900787160053,11.4474609499653,11.5105522463305,
	    11.5681393757352,11.6296655692817,11.6881347901476,11.7472689661625,
	    11.8082095152233,11.8677817185999,11.9304651581007,11.9974601307203,
	    12.0534139326873,12.1170970940361,12.1826772202847,12.2438235245055,
	    12.3082414844333,12.3730494547427,12.4427670181475,12.5063128878375,
	    12.5746342400692,12.6355357639583,12.7045641399894,12.7744382235243,
	    12.8393099890805,12.9053573862441,12.9740052706089,13.0431130264934,
	    13.1076478120141,13.1788962714272,13.2547899250673,13.3191062340306,
	    13.3873723821233,13.4626671093683,13.5351413054691,13.6002890303257,
	    13.6727549561347,13.7433480905442,13.8203758751490,13.8894597391241,
	    13.9650724345572,14.0424947279418,14.1145736494095,14.1869505259957,
	    14.2648487431502,14.3363038446301,14.4125811974034,14.4905682049166,
	    14.5662201703487,14.6387280293371,14.7179170540247,14.7970185918576,
	    14.8716578730811,14.9540888797670,15.0308758187636,15.1157670129195,
	    15.1892110440495,15.2760089344214,15.3520386093852,15.4367083413759,
	    15.5189940834732,15.6062475635320,15.6858638332895,15.7667845971061,
	    15.8510624845800,15.9336911849826,16.0183825279772,16.1027386696510,
	    16.1917999602598,16.2742064268958,16.3651905371843,16.4566350772270,
	    16.5415575750266,16.6244136683457,16.7234567868704,16.8056128193133,
	    16.8991114457095,16.9860605564446,17.0819268193413,17.1673848082282,
	    17.2593353475008,17.3573375255881,17.4516931852104,17.5356273988459,
	    17.6331108315403,17.7264303521774,17.8288116625119,17.9204171794012,
	    18.0132236136846,18.1128453252531,18.2124969821689,18.3106932647074,
	    18.4046897261908,18.5078883845428,18.6031805242731,18.6997327053410,
	    18.8118171330686,18.9108630082413,19.0101687802463,19.1230061502564,
	    19.2180310179473,19.3231734011466,19.4306125912516,19.5307169056112,
	    19.6313005815731,19.7449308166208,19.8470737173723,19.9659207948939,
	    20.0650015400434,20.1767956550066,20.2783291492390,20.4017033761839,
	    20.5141760553577,20.6171570827686,20.7387547883308,20.8621176221599,
	    20.9703220891294,21.0856855981919,21.2073349254418,21.3293193182786,
	    21.4362563155778,21.5703905692755,21.6866818037326,21.8063694815790,
	    21.9228821416738,22.0404017731982,22.1624800291132,22.2728888318869,
	    22.4162884343898,22.5369169659250,22.6636765841450,22.7912888449054,
	    22.9116797104447,23.0338857037757,23.1675260061147,23.3103888905105,
	    23.4359652524840,23.5656322069277,23.6918368226871,23.8386755400102,
	    23.9680425425941,24.1058431177476,24.2302942788477,24.3725100095426,
	    24.5157037585428,24.6614973061342,24.7948011450013,24.9412583898473,
	    25.0973906794099,25.2100213765874,25.3706398611414,25.5125359414269,
	    25.6776839312837,25.8030942466322,25.9607638391549,26.1093332760054,
	    26.2639301846945,26.4217565500883,26.5714430437571,26.7402874376278,
	    26.9006071558629,27.0351177417359,27.2064437583628,27.3576031161953,
	    27.5260894909150,27.6788098281336,27.8335402744644,27.9811896125025,
	    28.1652849189775,28.3365235587167,28.5003005322618,28.6628688089729,
	    28.8402634212527,29.0028251183254,29.1712880057213,29.3550427262432,
	    29.5135662739373,29.6981802400700,29.8631049992037,30.0748126389716,
	    30.2388199921699,30.4223494138780,30.6032713446095,30.7837360702688,
	    30.9687399013649,31.1703058321588,31.3599968101278,31.5634507030669,
	    31.7053881801805,31.8935814070654,32.1067641065696,32.3171826963319,
	    32.5128540442367,32.7152970653084,32.9013245200739,33.1340537689040,
	    33.3102795072723,33.5336056635777,33.7326210723722,33.9775312305382,
	    34.1442656218502,34.3581553642199,34.5899673767947,34.8202389460530,
	    34.9791374963688,35.2236151113314,35.4297943718530,35.6580328695314,
	    35.8457547397206,36.0997555670833,36.3182340864783,36.5531532315771,
	    36.7750171563204,37.0083845844372,37.2717626781723,37.4964407421431,
	    37.7668146050710,37.9630636976100,38.2477250589346,38.4487445318075,
	    38.7072716495196,38.9898874882486,39.2451405420999,39.4408984819035,
	    39.7183205199715,39.9739921733534,40.2562635531891,40.4701951575652,
	    40.7740428021643,41.0296359005203,41.3122213398939,41.4879185296754,
	    41.8299029060460,42.0989119945830,42.3982079544659,42.6536469797798,
	    42.9939502854647,43.1718812623893,43.4638066641708,43.8331365156640,
	    44.0553236085689,44.3745211109544,44.6027849089707,44.9574728132945,
	    45.2419930731294,45.5665028773449,45.8034122942281,46.1856931247630,
	    46.4725456375164,46.7763476615423,47.1481274936983,47.3644901902863,
	    47.7758967209952,48.0726604326528,48.4129024080343,48.6842394382906,
	    48.9966893068666,49.3746473465213,49.6286220365622,50.0076323929557,
	    50.3002608976516,50.6953842052018,50.9270998460882,51.4666686322059,
	    51.7373629097051,52.1038168560133,52.3908806847543,52.7396210494500,
	    53.2326971520746,53.6468388309461,53.8131913661623,54.2388898520467,
	    54.7673072075645,55.0907210597667,55.3966754286085,55.8109148762339,
	    56.2580851689503,56.5709446192488,56.9449340184835,57.4002818711531,
	    57.7948406765102,58.2288209255179,58.6447776863673,59.0287429872185,
	    59.3297344281552,59.8197322832708,60.2212868903055,60.7566657552925,
	    61.1565398235696,61.6004792581073,61.9884209212578,62.4063388957931,
	    62.9633143248027,63.3291790517566,63.6624143010990,64.3811873138852,
	    64.6921532725949,65.1764878565722,65.6752825933238,66.0885304135187,
	    66.7864986401463,67.1000098324063,67.5721136765712,68.0865082981933,
	    68.6216078098740,69.1257106252467,69.5025195715298,69.9597678406956,
	    70.7775513169418,71.1956151861019,71.5381530728122,72.1589903234614,
	    72.9104686599608,73.1686493786416,73.8324451225742,74.2453442928933,
	    74.9483252466975,75.2006739117198,75.8353744301911,76.4502474609218,
	    76.8620103246304,77.7714334590265,78.4660415748067,79.1974333915756,
	    79.2120199655731,80.1741835504336,80.6282991765784,81.6907083016230,
	    81.8481722691786,82.9964322047514,82.5399677396722,83.9997218403346,
	    84.3961186620246,84.7684072728869
    };

    /** log10(Energy[GeV]) for multiplicity table model 2 */
    protected double[] logE_multiplicity2_table = null;



    protected int modelNumber = 0;

    protected double[] logE_table = null;
    protected static final double ln10 = Math.log(10.0);


    /** Fraction of muon + tau's multiplicity in the black hole decay products.
     They are distributed accordng to the number of degrees of freedom
     (muon + tau = 4 against overall DOF 120).*/
    protected static double fractionOfMuonAndTau = 4.0/120.0; // 3 %
    /** Fraction of particle multiplicity in the black hole decay products
	resulting in cascades.*/
    protected static double fractionOfShowers = 96.0/120.0;   // 80 %

    private boolean isShower = false;


    /** Constructor: Register the Particle and ParticlePoint classes.
	It also reads the pre-calculated y/E * dsigma/dy
        from the data file. */
    public NeutrinoBHevaporation(Particle p, ParticlePoint s) 
	throws IOException {
	super(p, s, 3);
	logE_table = new double[energy_table.length];
	for(int i=0;i<energy_table.length;i++){
	    logE_table[i]=Math.log(energy_table[i])/ln10;
	    //System.err.println("logE=" + logE_table[i] + 
	    //		       " sigma=" + sigma_table[modelNumber][i]);
	}

	logE_multiplicity1_table = new double[multiplicity_table_model1.length];
	for(int i=0;i<multiplicity_table_model1.length;i++){
	    logE_multiplicity1_table[i] = 5.7378+0.0126*(double )i;
	}
	//System.err.println("logE model1 from " + logE_multiplicity1_table[0] + 
	//		   " to " + 
	//	   logE_multiplicity1_table[logE_multiplicity1_table.length-1]);

	logE_multiplicity2_table = new double[multiplicity_table_model2.length];
	for(int i=0;i<multiplicity_table_model2.length;i++){
	    logE_multiplicity2_table[i] = 6.695+0.0126*(double )i;
	}
	//System.err.println("logE model2 from " + logE_multiplicity2_table[0] + 
	//		   " to " + 
	//	   logE_multiplicity2_table[logE_multiplicity2_table.length-1]);

    }

    /** Multiplicity of the decay products from the black hole evaporation.
	This number was weighted by the parton distribution implying it is
	the AVERAGE multiplicity. Obtained by the PRD paper.
     */
    public double getMultiplicity(){
	double logEnergy = Math.log(energy)/ln10;
	double multiplicity = 0.0;
	if(modelNumber == 0){
	    if(logEnergy<logE_multiplicity1_table[0]) multiplicity = 0.0;
	    else{
		multiplicity = 
		Interpolation.mThPolynominalInterpolate(logE_multiplicity1_table,
	    multiplicity_table_model1,logE_multiplicity1_table.length,logEnergy,4); 
	    }
	}else{
	    if(logEnergy<logE_multiplicity2_table[0]) multiplicity = 0.0;
	    else{
		multiplicity = 
		Interpolation.mThPolynominalInterpolate(logE_multiplicity2_table,
	    multiplicity_table_model2,logE_multiplicity2_table.length,logEnergy,4);
	    }
	}
	if(multiplicity<0.0) multiplicity = 0.0;
	return multiplicity;
    }

    /** Multiplicity of muons from the black hole evaporation.*/
    public double getMuonMultiplicity(){
	return getMultiplicity()*fractionOfMuonAndTau/2.0;
    }
    /** Multiplicity of taus from the black hole evaporation.*/
    public double getTauMultiplicity(){
	return getMuonMultiplicity();
    }

    /** Multiplicity of shower particles from the black hole evaporation.*/
    public double getShowerMultiplicity(){
	return getMultiplicity()*fractionOfShowers;
    }

    protected void switchToShower(){
	isShower = true;
    }
    protected void switchToChargedLepton(){
	isShower = false;
    }

    /**
       model number settings.
       <pre>
       number 0  : n=6 xmin = 1 M_D=1TeV
       number 1  : n=6 xmin = 3 M_D=1TeV
       number 2  : n=6 xmin = 1 M_D=2TeV
       number 3  : n=6 xmin = 3 M_D=2TeV
       </pre>
     */
    public void setModelNumber(int number){
	if(number<=3 && 0<=number)modelNumber = number;
	else System.err.println("wrong model number");
    }
    

    /** Differential cross section dsigma/dz [cm^2]
	<pre>
	z = Erecoiling/Eincoming = Emuon or Etau/Eneutrino
	</pre>
	The z distribution is a flat distribution in this model.
	Multiplicity of the produced particles are renormalized -
	integral of the differential cross section is equal to
	total cross section x multiplicity.
	This difinition is introduced for consistent way in the numerical
	calculation in the Propagation package.
    */
    public double getDSigmaDz(double z){
	isShower=false;
	if(!isValidInelasticity(1.0-z)) return 0.0;
	double dSigmaDz = getSigma()*1.0/(getYmax()-getYmin());
	switch (p.getFlavor()) {
	case 1 : // muon
	    dSigmaDz = dSigmaDz*getMuonMultiplicity();
	    break;

	case 2 : // tau
	    dSigmaDz = dSigmaDz*getTauMultiplicity();
	    break;

	default :
	    dSigmaDz = dSigmaDz*getMuonMultiplicity();
	    break;
	}
	return dSigmaDz;
    }

    /** Differential cross section dsigma/dy [cm^2]
	<pre>
	y = 1-Erecoiling/Eincoming = Eshower/Eneutrino
	</pre>
	The y distribution is a flat distribution in this model.
    */
    public double getDSigmaDy(double y){
	isShower = true;
	if(!isValidInelasticity(y)) return 0.0;
	long nMultiplicity = (long )(getMultiplicity()+roundOffError);
	long nShower = (long )(getMultiplicity()*y+0.5);
	double prob= 
	    SpecialFunctions.binominal(fractionOfShowers,nMultiplicity,nShower)*
	    nMultiplicity;

	//System.err.println("y= " + y + "mutiplicity(" + getMultiplicity() + " " +
	//  nMultiplicity + ") nshower(" + nShower + ") prob=" + prob);
	return prob*getSigma();
    }


    /** Total cross section [cm^2] */
    public double getSigma( ){
	double logEnergy = Math.log(energy)/ln10;
	if(logEnergy<logE_multiplicity1_table[0]) return 0.0;
	double sigma = 
	    Interpolation.mThPolynominalInterpolate(logE_table,
	    sigma_table[modelNumber],logE_table.length,logEnergy,4); 
	// [pBarn]
    	return sigma*1.0e-36; // [cm^2]
    }


    /** Checking the range of the given inelasticity y 
	that is determined in an individual interaction channel.
    */
    public boolean isValidInelasticity(double y){ 
        if(getYmin()<= y && y <= getYmax()) return true;
        else return false;
    }



    /** Getting the range of allowed y for a given interaction */
    public double getYmax( ){
	double yMax =  1.0;
	return yMax;
    }
    public double getYmin( ){
	if(!isShower){
	    double zMax = 2.0/getMultiplicity();
	    return 1.0-zMax;
	}else{
	    return 0.0;
	}
    }


    /** Checking the particle kind involved with
	a given interaction. Only neutrinos
	are allowed to be involved with this interaction
	in the medium.
    */
    public boolean isValidParticle(Particle p){
	if(p.getDoublet()==0 && p.getFlavor()>=0 && 3>p.getFlavor())
	return true;
	else return false;
    }




    /** Show Name of the Interaction */
    public String interactionName(){
	String channel = "Neutrino Black Hole evapolation ";
	String incidentParticle = 
	    p.particleName(p.getFlavor(), p.getDoublet());
	String name = channel.concat("from ").concat(incidentParticle);
	return name;
    }
}



